name: Package
# run-name: ${{ inputs.version }}

on:
  push:
  workflow_dispatch:
    # inputs:
    #   version:
    #     description: Package Version

concurrency:
  group: ${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  Package:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ inputs.version }}

      # Github does not allow submodules to be cloned as part of the default checkout action.
      - name: Checkout Web Client
        uses: actions/checkout@v3
        with:
          repository: skynapier/react-template
          path: ./web-client
          token: ${{ secrets.GH_TOKEN }}

      # Github does not allow submodules to be cloned as part of the default checkout action.
      - name: Checkout Web Server
        uses: actions/checkout@v3
        with:
          repository: skynapier/web-server-template
          path: ./web-server
          token: ${{ secrets.GH_TOKEN }}

      - name: Decode JSON Secret
        run: |
          echo "${{ secrets.GCP_GAR_SA_CREDENTIALS }}" | base64 -d > gar_sa_credentials.json
          cat gar_sa_credentials.json


      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.GCP_GAR_SA_CREDENTIALS }}
          # Either user Workload Identity Federation or Service Account Keys. See
          # above more more examples

      # This example uses the docker login action
      - uses: 'docker/login-action@v1'
        with:
          registry: '${{vars.GCP_LOCATION}}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Build/Push Dockerfile to ACR
        shell: bash
        run: |
          docker build . \
            -t ${{vars.GCP_LOCATION}}-docker.pkg.dev/${{vars.GCP_PROJECT_ID}}/${{vars.GCP_GAR_REPO}}/${{ github.event.repository.name }}:latest

          docker images